name: Build
on: [push, pull_request]
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python: [3.8, 3.7, 3.6]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
      - name: Install MacOS packages
        if: matrix.os == 'macos-latest'
        run: |
          brew update
      - name: Install Linux packages
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
      - name: Run tests
        run: |
          python setup.py test

  build-source:
    needs: [test]
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Build SDist
      run: >-
        python setup.py sdist
    - name: Upload wheels
      uses: actions/upload-artifact@v1
      with:
        name: dist
        path: dist/

  build-wheels:
    needs: [test]
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 2
      matrix:
        os: [ubuntu-20.04, windows-latest]
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Build Wheels
      env:
        CIBW_SKIP: cp27-* cp35-* pp27-*
      run: >-
        python -m pip install cibuildwheel;
        python -m cibuildwheel --output-dir dist
    - name: Upload wheels
      uses: actions/upload-artifact@v1
      with:
        name: dist
        path: dist/

  publish:
    needs: [build-wheels, build-source]
    runs-on: ubuntu-20.04
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    steps:
    - uses: actions/checkout@v1
    - uses: actions/download-artifact@v1
      with:
        name: dist
        path: dist/
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Build a source tarball
      run: >-
        python -m pip install --user --upgrade setuptools;
        python setup.py sdist;
    - name: Publish distribution ðŸ“¦ to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.pypi_password }}
